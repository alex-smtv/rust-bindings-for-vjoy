[package]
name = "vjoy-wrapper"
description = "Rust wrapper around vJoy C API."
version = "0.1.0"
authors = ["Alexandre Simoes Tavares"]
edition = "2018"
readme = "README.md"
license = "MIT"
keywords = ["vjoy"]
categories = ["api-bindings"]
publish = false
documentation = "https://alex-smtv.github.io/rust-vjoy-wrapper/vjoy_wrapper/index.html"
repository = "https://github.com/alex-smtv/rust-vjoy-wrapper/"

[dependencies]
widestring = "0.4.3"
winreg = "0.9.0"
# to be used with a feature!
sdl2 = { version = "0.34.5", features = ["bundled"] }

[dev-dependencies]
rand = "0.8.4"
serial_test = "0.5.1"
ctor = "0.1.20"
libc = "0.2.98"

[build-dependencies]
bindgen = "0.58.1"

# TO REVIEW: Explore 'features' to allow using different version of vjoy
# Trigger error if features is deactivated
[features]
default = ["vjoy-218"]
vjoy-221 = []
vjoy-218 = []

# vJoy library doesn't provide us a mean to read axes values. To test our wrapper implementation 
# we use SDL2 to read back the values we set to vJoy. It is preferred to handle SDL2 in the 
# main thread. A new test target is defined for that matter that will also enable us an isolated
# environment to handle the delicate testing case.
# https://stackoverflow.com/questions/43458194/is-there-any-way-to-tell-cargo-to-run-its-tests-on-the-main-thread
[[test]]
name = "test_set_vjoy_axis_registered"
path = "tests_extra/test_set_vjoy_axis_registered.rs"
harness = false